---
openapi: 3.0.1
info:
  title: API
consumes:
- application/json
produces:
- application/json
servers:
- url: http://aba-center-be.herokuapp.com
- url: http://localhost:3000

schemes:
- "https"
- "http"
paths:
  "/auth":
    post:
      summary: User registration
      parameters:
      - in: "body"
        name: "body"
        description: "Request parameters"
        required: true
        schema:
          $ref: "#/definitions/UserRegistrationParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                status: 'success'
                data:
                  email: "testuser2@yopmail.com"
                  uid: "testuser2@yopmail.com"
                  first_name: "testuser2"
                  last_name: "lname"
                  role: "ABA Admin"
        "422":
          description: "Invalid input"
          content:
            application/json:
              example:
                status: 'error'
                data:
                  uid: ""
                  first_name: "testuser2"
                  last_name: "lname"
                  email: "testuser2@yopmail.com"
                  role: "ABA Admin"
                errors:
                  email: ["has already been taken"]
                  full_messages: ["Email has already been taken"]
    put:
      summary: Staff update
      parameters:
      - in: "body"
        name: "body"
        description: "Request parameters"
        required: true
        schema:
          $ref: "#/definitions/StaffUpdateParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                status: 'success'
                data:
                  email: "testuser2@yopmail.com"
                  uid: "testuser2@yopmail.com"
                  first_name: "testuser2"
                  last_name: "lname"
                  role: "ABA Admin"
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: [
                  "User not found."
                ]
                status: "error"

  "/auth/sign_in":
    post:
      summary: User signin
      parameters:
      - in: "body"
        name: "body"
        description: "Request parameters"
        required: true
        schema:
          $ref: "#/definitions/UserSigninParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                data:
                  email: "aba_admin_user1@yopmail.com"
                  uid: "aba_admin_user1@yopmail.com"
                  first_name: "Cortez"
                  last_name: "Hermiston"
                  role: "ABA Admin"
        "401":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Invalid login credentials. Please try again."]

  "/auth/sign_out":
    delete:
      summary: User signout
      parameters:
      - in: "header"
        name: "header"
        description: "Request headers"
        required: true
        schema:
          $ref: "#/definitions/UserSignoutHeaders"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["User was not found or was not logged in."]

  "/auth/password":
    post:
      summary: Password reset
      parameters:
      - in: "body"
        name: "body"
        description: "Request parameters"
        required: true
        schema:
          $ref: "#/definitions/PasswordResetParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
                message: "An email has been sent to 'testuser1@yopmail.com' containing instructions for resetting your password."
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Unable to find user with email 'testuser1@yopmail.com1'."]
    put:
      summary: Password update
      parameters:
      - in: "body"
        name: "body"
        description: "Request parameters"
        required: true
        schema:
          $ref: "#/definitions/PasswordUpdateParameters"
      - in: "header"
        name: "header"
        description: "Request headers"
        required: true
        schema:
          $ref: "#/definitions/PasswordUpdateHeaders"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
                data:
                  email: "aba_admin_user1@yopmail.com"
                  uid: "aba_admin_user1@yopmail.com"
                  first_name: "Cortez"
                  last_name: "Hermiston"
                  role: "ABA Admin"
                message: "Your password has been successfully updated."
        "401":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Unauthorized"]

  "/organizations/:organization_id/clinics":
    get:
      summary: List of an organization's clinics
      parameters:
      - in: "path"
        name: "organization_id"
        description: "Organization id"
        required: true
      responses:
        "200":
          description: "Clinics list"
          content:
            application/json:
              example:
                [
                  {
                      "id": 1,
                      "name": "cli1"
                  },
                  {
                      "id": 2,
                      "name": "cli2"
                  }
                ]

  /roles:
    get:
      summary: List of roles
      responses:
        "200":
          description: "Roles list"
          content:
            application/json:
              example: [
                          {
                              "id": 1,
                              "name": "aba_admin"
                          },
                          {
                              "id": 2,
                              "name": "administrator"
                          },
                          {
                              "id": 3,
                              "name": "bcba"
                          },
                          {
                              "id": 4,
                              "name": "rbt"
                          },
                          {
                              "id": 5,
                              "name": "billing"
                          }
                        ]

  /staff:
    get:
      summary: List of staff
      responses:
        "200":
          description: "Staff list"
          content:
            application/json:
              example: [
                          {
                              "id": 10,
                              "first_name": "Ariel",
                              "last_name": "Nolan"
                          },
                          {
                              "id": 3,
                              "first_name": "Bill",
                              "last_name": "Boyer"
                          }
                        ]
          
definitions:
  UserRegistrationParameters:
    type: "object"
    required:
      - email
      - password
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role_id:
        type: "string"
      clinic_id:
        type: "integer"
      supervisor_id:
        type: "integer"
      hired_at:
        type: "string"
      web_address:
        type: "string"
      status:
        type: "string"
        enum: [active, inactive]
      terminated_at:
        type: "string"
      pay_type:
        type: "string"
        enum: [hourly, independent_contract, salaried, other]
      service_provider:
        type: "boolean"
      timing_type:
        type: "string"
        enum: [full_time, part_time]
      hours_per_week:
        type: "integer"
      ot_exempt:
        type: "string"
      phone_ext:
        type: "string"
      term_type:
        type: "string"
        enum: [involuntary, voluntary]
      residency:
        type: "string"
        enum: [green_card, us_citizen, work_visa]
      status_date:
        type: "string"
      driving_license:
        type: "string"
      driving_license_expires_at:
        type: "string"
      date_of_birth:
        type: "string"
      ssn:
        type: "string"
      badge_id:
        type: "string"
      badge_type:
        type: "string"
        enum: [custom, agency_aka_database_id, database_id, first_name_last_name_id]
      phone_numbers_attributes[0][phone_type]:
        type: "string"
        enum: [fax, home, mobile, pager, work, other]
      phone_numbers_attributes[0][number]:
        type: "string"
      address_attributes[line1]:
        type: "string"
      address_attributes[line2]:
        type: "string"
      address_attributes[line3]:
        type: "string"
      address_attributes[zipcode]:
        type: "string"
      address_attributes[city]:
        type: "string"
      address_attributes[state]:
        type: "string"
      address_attributes[country]:
        type: "string"
      rbt_supervision_attributes[status]:
        type: "string"
        enum: [requires, provides, n_a]
      rbt_supervision_attributes[start_date]:
        type: "string"
      rbt_supervision_attributes[end_date]:
        type: "string"
      services_attributes[0][name]:
        type: "string"
      services_attributes[0][status]:
        type: "string"
        enum: [active, inactive]
      services_attributes[0][default_pay_code]:
        type: "string"
        enum: [drive_time, hourly, paid_time_off]
      services_attributes[0][category]:
        type: "string"
        enum: [aba, activities_arts_sports, adult_services, non_service, ot, psych, pt, respite_supported_living, slp, social_skills, tutoring, virtual, other]
      services_attributes[0][tracking_id]:
        type: "string"
        enum: [nan_rbt]

  StaffUpdateParameters:
    type: "object"
    required:
      - email
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      role_id:
        type: "string"
      clinic_id:
        type: "integer"
      supervisor_id:
        type: "integer"
      hired_at:
        type: "string"
      web_address:
        type: "string"
      status:
        type: "string"
        enum: [active, inactive]
      terminated_at:
        type: "string"
      pay_type:
        type: "string"
        enum: [hourly, independent_contract, salaried, other]
      service_provider:
        type: "boolean"
      timing_type:
        type: "string"
        enum: [full_time, part_time]
      hours_per_week:
        type: "integer"
      ot_exempt:
        type: "string"
      phone_ext:
        type: "string"
      term_type:
        type: "string"
        enum: [involuntary, voluntary]
      residency:
        type: "string"
        enum: [green_card, us_citizen, work_visa]
      status_date:
        type: "string"
      driving_license:
        type: "string"
      driving_license_expires_at:
        type: "string"
      date_of_birth:
        type: "string"
      ssn:
        type: "string"
      badge_id:
        type: "string"
      badge_type:
        type: "string"
        enum: [custom, agency_aka_database_id, database_id, first_name_last_name_id]
      phone_numbers_attributes[0][phone_type]:
        type: "string"
        enum: [fax, home, mobile, pager, work, other]
      phone_numbers_attributes[0][number]:
        type: "string"
      address_attributes[line1]:
        type: "string"
      address_attributes[line2]:
        type: "string"
      address_attributes[line3]:
        type: "string"
      address_attributes[zipcode]:
        type: "string"
      address_attributes[city]:
        type: "string"
      address_attributes[state]:
        type: "string"
      address_attributes[country]:
        type: "string"
      rbt_supervision_attributes[status]:
        type: "string"
        enum: [requires, provides, n_a]
      rbt_supervision_attributes[start_date]:
        type: "string"
      rbt_supervision_attributes[end_date]:
        type: "string"
      services_attributes[0][name]:
        type: "string"
      services_attributes[0][status]:
        type: "string"
        enum: [active, inactive]
      services_attributes[0][default_pay_code]:
        type: "string"
        enum: [drive_time, hourly, paid_time_off]
      services_attributes[0][category]:
        type: "string"
        enum: [aba, activities_arts_sports, adult_services, non_service, ot, psych, pt, respite_supported_living, slp, social_skills, tutoring, virtual, other]
      services_attributes[0][tracking_id]:
        type: "string"
        enum: [nan_rbt]

  UserSigninParameters:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"
  PasswordResetParameters:
    type: "object"
    required:
      - email
      - redirect_url
    properties:
      email:
        type: "string"
      redirect_url:
        type: "string"
        description: 'for redirection, after password change'
  PasswordUpdateParameters:
    type: "object"
    required:
    - password
    - password_confirmation
    properties:
      password:
        type: "string"
      password_confirmation:
        type: "string"
        description: 'should be same as password'
  PasswordUpdateHeaders:
    type: "object"
    required:
    - access-token
    - client
    - uid
    properties:
      access-token:
        type: "string"
      client:
        type: "string"
      uid:
        type: "string"
  UserSignoutHeaders:
    type: "object"
    required:
    - access-token
    - client
    - uid
    properties:
      access-token:
        type: "string"
      client:
        type: "string"
      uid:
        type: "string"
  