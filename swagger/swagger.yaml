---
openapi: 3.0.1
info:
  title: API
consumes:
- application/json
produces:
- application/json
servers:
- url: https://aba-center-be.herokuapp.com
- url: http://aba-center-be.herokuapp.com
- url: http://localhost:3000

schemes:
- "https"
- "http"
paths:
  "/auth":
    post:
      summary: User registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/UserRegistrationParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                status: 'success'
                data:
                  email: "testuser2@yopmail.com"
                  uid: "testuser2@yopmail.com"
                  first_name: "testuser2"
                  last_name: "lname"
                  role: "ABA Admin"
        "422":
          description: "Invalid input"
          content:
            application/json:
              example:
                status: 'error'
                data:
                  uid: ""
                  first_name: "testuser2"
                  last_name: "lname"
                  email: "testuser2@yopmail.com"
                  role: "ABA Admin"
                errors:
                  email: ["has already been taken"]
                  full_messages: ["Email has already been taken"]
    put:
      summary: Staff update
      parameters:
        - in: "header"
          name: "access-token"
          description: "Request headers"
          required: true
        - in: "header"
          name: "client"
          description: "Request headers"
          required: true
        - in: "header"
          name: "uid"
          description: "Request headers"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/StaffUpdateParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                status: 'success'
                data:
                  email: "testuser2@yopmail.com"
                  uid: "testuser2@yopmail.com"
                  first_name: "testuser2"
                  last_name: "lname"
                  role: "ABA Admin"
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: [
                  "User not found."
                ]
                status: "error"

  "/auth/sign_in":
    post:
      summary: User signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/UserSigninParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                data:
                  email: "aba_admin_user1@yopmail.com"
                  uid: "aba_admin_user1@yopmail.com"
                  first_name: "Cortez"
                  last_name: "Hermiston"
                  role: "ABA Admin"
                  organization_id: 1
        "401":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Invalid login credentials. Please try again."]

  "/auth/sign_out":
    delete:
      summary: User signout
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["User was not found or was not logged in."]

  "/auth/password":
    post:
      summary: Password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/PasswordResetParameters"
      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
                message: "An email has been sent to 'testuser1@yopmail.com' containing instructions for resetting your password."
        "404":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Unable to find user with email 'testuser1@yopmail.com1'."]
    put:
      summary: Password update
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/PasswordUpdateParameters"

      responses:
        "200":
          description: "Valid input"
          content:
            application/json:
              example:
                success: true
                data:
                  email: "aba_admin_user1@yopmail.com"
                  uid: "aba_admin_user1@yopmail.com"
                  first_name: "Cortez"
                  last_name: "Hermiston"
                  role: "ABA Admin"
                message: "Your password has been successfully updated."
        "401":
          description: "Invalid input"
          content:
            application/json:
              example:
                success: false
                errors: ["Unauthorized"]

  /organizations/{organization_id}/clinics:
    get:
      summary: List of an organization's clinics
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "organization_id"
        description: "Organization id"
        required: true
      responses:
        "200":
          description: "Clinics list"
          content:
            application/json:
              example:
                [
                  {
                      "id": 1,
                      "name": "cli1"
                  },
                  {
                      "id": 2,
                      "name": "cli2"
                  }
                ]

  /roles:
    get:
      summary: List of roles
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "Roles list"
          content:
            application/json:
              example: [
                          {
                              "id": 1,
                              "name": "aba_admin"
                          },
                          {
                              "id": 2,
                              "name": "administrator"
                          },
                          {
                              "id": 3,
                              "name": "bcba"
                          },
                          {
                              "id": 4,
                              "name": "rbt"
                          },
                          {
                              "id": 5,
                              "name": "billing"
                          }
                        ]

  /clinics/{clinic_id}/staff:
    get:
      summary: List of clinic's staff
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id"
        required: true
      responses:
        "200":
          description: "Staff list"
          content:
            application/json:
              example: [
                          {
                            "id": 9,
                            "first_name": "Chaya",
                            "last_name": "Schultz",
                            "immediate_supervisor": "",
                            "phone": null,
                            "extension": null,
                            "role_name": "billing"
                          },
                          {
                            "id": 3,
                            "first_name": "Jaimie",
                            "last_name": "Bartell",
                            "immediate_supervisor": "",
                            "phone": null,
                            "extension": null,
                            "role_name": "administrator"
                          }
                        ]
          
  /clinics/{clinic_id}/staff/{staff_id}:
    get:
      summary: Specific clinic's staff
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Staff id"
        required: true
      responses:
        "200":
          description: "Staff list"
          content:
            application/json:
              example: {
                        "id": 8,
                        "first_name": "Gov.",
                        "last_name": "Zachary",
                        "email": "billing_user2@yopmail.com",
                        "status": "active",
                        "service_provider": false,
                        "terminated_at": null,
                        "title": "billing",
                        "gender": null,
                        "supervisor": {
                          "uid": "billing_user1@yopmail.com",
                          "first_name": "Ramon",
                          "last_name": "Johns",
                          "email": "billing_user1@yopmail.com",
                          "role": "billing"
                        },
                        "address": {
                          "id": 1,
                          "line1": "choomantar gali",
                          "line2": null,
                          "line3": null,
                          "zipcode": "487221",
                          "city": "indore",
                          "state": null,
                          "country": null
                        },
                        "rbt_supervision": {
                          "id": 1,
                          "status": "requires"
                        },
                        "phone_numbers": [
                          {
                            "id": 1,
                            "phone_type": "home",
                            "number": "+919407320416"
                          }
                        ],
                        "services": [
                          {
                            "id": 1,
                            "name": "s1",
                            "status": "active",
                            "default_pay_code": "drive_time",
                            "category": "aba",
                            "display_pay_code": null,
                            "tracking_id": "nan_rbt"
                          }
                        ]
                    }
    put:
      summary: Staff update by admin
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Staff id"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/StaffUpdateByAdminParameters"
      responses:
        "200":
          description: "Staff Updated"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": {
                              "id": 3
                          },
                          "errors": []
                        }
  /credentials:
    get:
      summary: List of credentials
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "Credentials list"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": [
                              {
                                  "id": 1,
                                  "type": "education",
                                  "name": "Bachelor's Degree",
                                  "description": "The holder has completed a four year college program.",
                                  "lifetime": false
                              },
                              {
                                  "id": 2,
                                  "type": "education",
                                  "name": "Master's Degree",
                                  "description": "The holder has completed a four year college program.",
                                  "lifetime": true
                              }
                          ]
                        }
    post:
      summary: Credential create
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CredentialCreateParameters"
      responses:
        "200":
          description: "Credentials list"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": {
                              "id": 1,
                              "type": "education",
                              "name": "name",
                              "description": "description",
                              "lifetime": false
                          }
                        }

  /credentials/{id}:
    put:
      summary: credential update
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "id"
        description: "Credential id"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CredentialUpdateParameters"
      responses:
        "200":
          description: "Updated Credential"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": {
                              "id": 1,
                              "type": "education",
                              "name": "name",
                              "description": "description",
                              "lifetime": false
                          }
                        }
    get:
      summary: credential show
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "id"
        description: "Credential id"
        required: true
      responses:
        "200":
          description: "Credential detail"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": {
                              "id": 1,
                              "type": "education",
                              "name": "name",
                              "description": "some description",
                              "lifetime": false
                          }
                        }

  /credentials/types:
    get:
      summary: credential types
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "Credential types"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "education": 0,
                  "certification": 1,
                  "other": 2
                }
              }

  /phone_types:
    get:
      summary: phone number types
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "Phone number types"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "fax": 0,
                  "home": 1,
                  "mobile": 2,
                  "pager": 3,
                  "work": 4,
                  "other": 5
                }
              }

  /clinics/{clinic_id}/staff/supervisor_list:
    get:
      summary: supervisors list
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id"
        required: true
      responses:
        "200":
          description: "Supervisors list"
          content:
            application/json:
              example: {
                "status": "success",
                "data": [
                    {
                        "id": 7,
                        "first_name": "Barrett",
                        "last_name": "Hauck"
                    },
                    {
                        "id": 8,
                        "first_name": "Blondell",
                        "last_name": "Greenfelder"
                    }
                  ]
                }

  /services:
    get:
      summary: services list
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      responses:
        "200":
          description: "services list"
          content:
            application/json:
              example: {
                "status": "success",
                "data": [
                    {
                        "id": 2,
                        "name": "additional 30 minutes spent performing activities",
                        "display_code": null,
                        "category": null
                    },
                    {
                        "id": 3,
                        "name": "caregiver training",
                        "display_code": null,
                        "category": null
                    }
                  ]
                }
    post:
      summary: Service create
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/ServiceCreateUpdateParameters"
      responses:
        "200":
          description: "Created service"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                          "id": 9,
                          "name": "test-service-name",
                          "status": "active",
                          "display_code": null
                        }
                      }

  /services/{id}:
    put:
      summary: Service update
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "id"
        description: "Service id to update"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/ServiceCreateUpdateParameters"
      responses:
        "200":
          description: "Updated service"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                    "id": 1,
                    "name": "test-service-name-updated",
                    "status": "active",
                    "display_code": null
                }
              }
  /services/{id}:
    get:
      summary: Service detail
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "id"
        description: "Service id"
        required: true
      responses:
        "200":
          description: "Service detail"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                    "id": 27,
                    "name": "test-service-name-up-2",
                    "status": "active",
                    "display_code": 21
                }
              }

  /clinics/{clinic_id}/funding_sources:
    get:
      summary: Funding sources list
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id"
        required: true
      responses:
        "200":
          description: "Funding sources list"
          content:
            application/json:
              example: {
                          "status": "success",
                          "data": [
                              {
                                  "id": 1,
                                  "name": "fs-name-1",
                                  "title": null,
                                  "status": "active"
                              },
                              {
                                  "id": 2,
                                  "name": "fs-name-2",
                                  "title": null,
                                  "status": "active"
                              }
                            ]
                        }
    post:
      summary: Funding source create
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Clinic id to associate"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/FundingSourceCreateUpdateParameters"
      responses:
        "200":
          description: "Created funding source"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                    "id": 1,
                    "name": "test-fs1",
                    "title": null,
                    "status": "active",
                    "clinic_id": 1
                },
                "errors": []
              }

  /clinics/{clinic_id}/funding_sources/{id}:
    put:
      summary: Funding source update
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "clinic_id"
        description: "Associated Clinic id"
        required: true
      - in: "path"
        name: "id"
        description: "Funding source id to update"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/FundingSourceCreateUpdateParameters"
      responses:
        "200":
          description: "Created funding source"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                    "id": 1,
                    "name": "test-fs1",
                    "title": null,
                    "status": "active",
                    "clinic_id": 1
                },
                "errors": []
              }

  /staff/{staff_id}/staff_credentials:
    get:
      summary: staff credential listing
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Associated staff id"
        required: true
      responses:
        "200":
          description: "Staff Credendentials list"
          content:
            application/json:
              example: {
                "status": "success",
                "data": [
                  {
                    "id": 1,
                    "name": "Bachelor's Degree",
                    "issued_at": null,
                    "expires_at": null,
                    "cert_lic_number": null,
                    "documentation_notes": null
                  },
                  {
                    "id": 3,
                    "name": "Master's Degree",
                    "issued_at": "2020-12-12",
                    "expires_at": null,
                    "cert_lic_number": "d4fd5fd4f5d",
                    "documentation_notes": "some doc notes"
                  }
                ]
              }
    post:
      summary: staff credential create
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Associated staff id"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/StaffCredentialCreateUpdateParameters"
      responses:
        "200":
          description: "Created staff credential"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "id": 4,
                  "name": "High School Diploma",
                  "issued_at": null,
                  "expires_at": null,
                  "cert_lic_number": null,
                  "documentation_notes": "doc temp"
                }
              }
  /staff/{staff_id}/staff_credentials/{id}:
    get:
      summary: staff credential show
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Associated staff id"
        required: true
      - in: "path"
        name: "id"
        description: "staff_credential id"
        required: true
      responses:
        "200":
          description: "Staff credential detail"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "id": 1,
                  "name": "Master's Degree",
                  "issued_at": "2020-12-12",
                  "expires_at": null,
                  "cert_lic_number": "up 89 ",
                  "documentation_notes": "some doc notes"
                }
              }
    put:
      summary: staff credential update
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Associated staff id"
        required: true
      - in: "path"
        name: "id"
        description: "Staff credential id"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/StaffCredentialCreateUpdateParameters"
      responses:
        "200":
          description: "Updated staff credential"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "id": 4,
                  "name": "High School Diploma",
                  "issued_at": null,
                  "expires_at": null,
                  "cert_lic_number": null,
                  "documentation_notes": "doc temp"
                }
              }
    delete:
      summary: staff credential delete
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      - in: "path"
        name: "staff_id"
        description: "Associated staff id"
        required: true
      - in: "path"
        name: "id"
        description: "staff_credential id"
        required: true
      responses:
        "200":
          description: "Deleted Staff credential detail"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "id": 1,
                  "name": "Master's Degree",
                  "issued_at": "2020-12-12",
                  "expires_at": null,
                  "cert_lic_number": "up 89 ",
                  "documentation_notes": "some doc notes"
                }
              }

  /organizations:  
    post:
      summary: organization create
      parameters:
      - in: "header"
        name: "access-token"
        description: "Request headers"
        required: true
      - in: "header"
        name: "client"
        description: "Request headers"
        required: true
      - in: "header"
        name: "uid"
        description: "Request headers"
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - name
              properties:
                name:
                  type: "string"
      responses:
        "200":
          description: "Organization create"
          content:
            application/json:
              example: {
                "status": "success",
                "data": {
                  "id": 4,
                  "name": "org1"
                }
              }
definitions:
  UserRegistrationParameters:
    type: "object"
    required:
      - email
      - password
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role_id:
        type: "string"
      clinic_id:
        type: "integer"
      supervisor_id:
        type: "integer"
      status:
        type: "string"
        enum: [active, inactive]
      terminated_at:
        type: "string"
      service_provider:
        type: "boolean"
      phone_numbers_attributes:
        type: "object"
        properties:
          0:
            type: "object"
            properties:
              phone_type:
                type: string
                enum: [fax, home, mobile, pager, work, other]
              number:
                type: string
      address_attributes:
        type: "object"
        properties:
          line1:
            type: "string"
          line2:
            type: "string"
          line3:
            type: "string"
          zipcode:
            type: "string"
          city:
            type: "string"
          state:
            type: "string"
          country:
            type: "string"
      rbt_supervision_attributes:
        type: "object"
        properties:
          status:
            type: "string"
            enum: [requires, provides, n_a]
          start_date:
            type: "string"
          end_date:
            type: "string"
      services_attributes:
        type: "object"
        properties:
          0:
            type: "object"
            properties:
              name:
                type: string
              status:
                type: "string"
                enum: [active, inactive]
              default_pay_code:
                type: "string"
                enum: [drive_time, hourly, paid_time_off]
              category:
                type: "string"
                enum: [aba, activities_arts_sports, adult_services, non_service, ot, psych, pt, respite_supported_living, slp, social_skills, tutoring, virtual, other]
              tracking_id:
                type: "string"
                enum: [nan_rbt]

  StaffUpdateParameters:
    type: "object"
    required:
      - email
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      phone_numbers_attributes:
        type: "object"
        properties:
          0:
            type: "object"
            properties:
              phone_type:
                type: string
                enum: [fax, home, mobile, pager, work, other]
              number:
                type: string
      address_attributes:
        type: "object"
        properties:
          line1:
            type: "string"
          line2:
            type: "string"
          line3:
            type: "string"
          zipcode:
            type: "string"
          city:
            type: "string"
          state:
            type: "string"
          country:
            type: "string"

  UserSigninParameters:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"
  PasswordResetParameters:
    type: "object"
    required:
      - email
      - redirect_url
    properties:
      email:
        type: "string"
      redirect_url:
        type: "string"
        description: 'for redirection, after password change'
  PasswordUpdateParameters:
    type: "object"
    required:
    - password
    - password_confirmation
    - current_password
    properties:
      password:
        type: "string"
      password_confirmation:
        type: "string"
        description: 'should be same as password'
      current_password:
        type: "string"
  PasswordUpdateHeaders:
    type: "object"
    required:
    - access-token
    - client
    - uid
    properties:
      access-token:
        type: "string"
      client:
        type: "string"
      uid:
        type: "string"
  UserSignoutHeaders:
    type: "object"
    required:
    - access-token
    - client
    - uid
    properties:
      access-token:
        type: "string"
      client:
        type: "string"
      uid:
        type: "string"
  CredentialCreateParameters:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      lifetime:
        type: "boolean"
      credential_type:
        type: integer
  CredentialUpdateParameters:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      lifetime:
        type: "boolean"
      credential_type:
        type: integer
  StaffUpdateByAdminParameters:
    type: "object"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      supervisor_id:
        type: "integer"
      status:
        type: "string"
        enum: [active, inactive]
      terminated_at:
        type: "string"
      phone_numbers_attributes:
        type: "object"
        properties:
          0:
            type: "object"
            properties:
              phone_type:
                type: string
                enum: [fax, home, mobile, pager, work, other]
              number:
                type: string
      address_attributes:
        type: "object"
        properties:
          line1:
            type: "string"
          line2:
            type: "string"
          line3:
            type: "string"
          zipcode:
            type: "string"
          city:
            type: "string"
          state:
            type: "string"
          country:
            type: "string"
  ServiceCreateUpdateParameters:
    type: "object"
    properties:
      name:
        type: "string"
      status:
        type: "integer"
      display_code:
        type: "integer"
  FundingSourceCreateUpdateParameters:
    type: "object"
    properties:
      name:
        type: "string"
      title:
        type: "string"
      status:
        type: "integer"
  StaffCredentialCreateUpdateParameters:
    type: "object"
    properties:
      credential_id:
        type: "string"
      issued_at:
        type: "string"
      expires_at:
        type: "string"
      cert_lic_number:
        type: "string"
      documentation_notes:
        type: 'string'
    
      